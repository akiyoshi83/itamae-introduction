upstream <%= @name %>-unicorn {
  server unix:<%= @path %>/current/tmp/sockets/<%= @name %>-unicorn.sock;
}

log_format  ltsv  'time:$time_local\t'
                  'host:$remote_addr\t'
                  'request:$filtered_request\t'
                  'status:$status\t'
                  'size:$body_bytes_sent\t'
                  'referer:$http_referer\t'
                  'ua:$http_user_agent\t'
                  'user_id:$upstream_http_x_user_id\t'
                  'reqtime:$request_time\t'
                  'upsttime:$upstream_response_time';

# ELB からのアクセスを、real_ipで置き換える
set_real_ip_from   172.16.0.0/12;
real_ip_header     X-Forwarded-For;

# 同時接続数制限を行う際のメモリ領域を10MB確保
limit_conn_zone $binary_remote_addr zone=limit_conn_zone1:10m;

# 1秒あたり50リクエストを超えるペースだと503を返す
limit_req_zone $binary_remote_addr zone=limit_rec_zone1:10m rate=50r/s;

server {
  root <%= @path %>/current/public;
  client_max_body_size 20M;

  access_log <%= @log_path %>/nginx/access.log ltsv;
  error_log  <%= @log_path %>/nginx/error.log  info;

  location / {
    set $filtered_request $request;
    if ($filtered_request ~ ([^?]*)\?.*) {
        set $filtered_request $1?[FILTERED];
    }

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_hide_header X-User-Id;
    proxy_redirect off;
    if (!-f $request_filename) {
      proxy_pass http://<%= @name %>-unicorn;
      break;
    }

    # 1つのIPからの同時接続数が100を超えると503が返る
    limit_conn limit_conn_zone1 100;

    # 1秒あたり50リクエストを超えた場合、100リクエスト超えるまで待ってから503を返す
    limit_req zone=limit_rec_zone1 burst=100;
  }
}

